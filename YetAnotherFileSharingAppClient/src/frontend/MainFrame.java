/*
 * YetAnotherFileSharingAppClient - The client side.
 */
package frontend;

import backend.YetAnotherFileSharingAppClient;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Robert Baronescu
 */
public class MainFrame extends javax.swing.JFrame {
    
    YetAnotherFileSharingAppClient clientInstance;

    /**
     * Creates new form MainFrame
     * @param clientInstance
     */
    public MainFrame(YetAnotherFileSharingAppClient clientInstance) {
        
        this.clientInstance = clientInstance;
        
        initComponents();
        updateListOfRemoteFiles();
    }
    
    private void updateListOfRemoteFiles() {

        remoteFilesLst.setListData(clientInstance.getRemoteFilesInfo());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listFilesPopUpMnu = new javax.swing.JPopupMenu();
        openFileMnuItm = new javax.swing.JMenuItem();
        deleteFileMnuItm = new javax.swing.JMenuItem();
        mainPnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remoteFilesLst = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        openFileMnuItm.setText("Open File");
        openFileMnuItm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMnuItmActionPerformed(evt);
            }
        });
        listFilesPopUpMnu.add(openFileMnuItm);

        deleteFileMnuItm.setText("Remove File");
        listFilesPopUpMnu.add(deleteFileMnuItm);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("YetAnotherFileSharingApp");

        mainPnl.setBorder(javax.swing.BorderFactory.createTitledBorder("All your files"));

        remoteFilesLst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                remoteFilesLstMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                remoteFilesLstMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(remoteFilesLst);

        javax.swing.GroupLayout mainPnlLayout = new javax.swing.GroupLayout(mainPnl);
        mainPnl.setLayout(mainPnlLayout);
        mainPnlLayout.setHorizontalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPnlLayout.setVerticalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("New File");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Upload File");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void remoteFilesLstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remoteFilesLstMouseClicked

        if (evt.isPopupTrigger())
            return;
        
        if (evt.getClickCount() < 2)
            return;
        
        if (remoteFilesLst.getSelectedIndex() == -1)
            return;
        
        String fileName = remoteFilesLst.getSelectedValue();
        File tempFile = clientInstance.downloadFile(fileName);
        if (tempFile == null) {
            JOptionPane.showMessageDialog(new JFrame(), "Remote file doesn't exist!", "Error!",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            /* Opening file for edit and wait for it to be closed. */
            String[] cmd = {"cmd.exe", "/C", "start /wait \"", tempFile.getPath(), "\""};
            Process p = Runtime.getRuntime().exec(cmd);
            p.waitFor();
            clientInstance.uploadAndRemoveFile(tempFile);
            JOptionPane.showMessageDialog(new JFrame(), "File succesfully modified.", "Info",
                JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_remoteFilesLstMouseClicked

    private void remoteFilesLstMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remoteFilesLstMouseReleased
        
        remoteFilesLst.setSelectedIndex(remoteFilesLst.locationToIndex(evt.getPoint()));
        
        if (evt.isPopupTrigger()) {
            listFilesPopUpMnu.show(this, evt.getX() + 36, evt.getY() + 75);
        }
    }//GEN-LAST:event_remoteFilesLstMouseReleased

    private void openFileMnuItmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMnuItmActionPerformed
        String fileName = remoteFilesLst.getSelectedValue();
        File tempFile = clientInstance.downloadFile(fileName);
        if (tempFile == null) {
            JOptionPane.showMessageDialog(new JFrame(), "Remote file doesn't exist!", "Error!",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            /* Opening file for edit and wait for it to be closed. */
            String[] cmd = {"cmd.exe", "/C", "start /wait \"", tempFile.getPath(), "\""};
            Process p = Runtime.getRuntime().exec(cmd);
            listFilesPopUpMnu.setVisible(false);
            p.waitFor();
            clientInstance.uploadAndRemoveFile(tempFile);
            JOptionPane.showMessageDialog(new JFrame(), "File succesfully modified.", "Info",
                JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openFileMnuItmActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem deleteFileMnuItm;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu listFilesPopUpMnu;
    private javax.swing.JPanel mainPnl;
    private javax.swing.JMenuItem openFileMnuItm;
    private javax.swing.JList<String> remoteFilesLst;
    // End of variables declaration//GEN-END:variables
}
